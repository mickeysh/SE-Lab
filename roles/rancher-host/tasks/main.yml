---
- name: Rancher Host | Install Rancher | Install pip and httplib2
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  become: true
  become_method: sudo
  with_items:
    - python-pip
    - python-httplib2

- name: Rancher Host | Install Rancher | Install Docker python module
  pip:
    name: docker-py
  become: true
  become_method: sudo

- set_fact:
    rancher_server: "{{ hostvars[groups['rancherelb'][0]].inventory_hostname }}"

- debug: var=rancher_server

- name: Rancher Host | Install Rancher | Wait for HTTP to come up
  wait_for:
    host: "{{ rancher_server }}"
    port: 8080
    delay: 15
    timeout: 320
    state: started

- name: Rancher Host | Install Kubernetes | Get Kubernetes project template
  uri:
    method: GET
    url: "http://{{ rancher_server }}:{{ rancher_port }}/v2-beta/project?name={{ rancher_project_name }}"
    return_content: yes
  register: rancher_project_url

- debug: var=rancher_project_url.json.data.0.id

- set_fact:
    rancher_project_id: "{{ rancher_project_url.json.data.0.id }}"

- name: Rancher Host | Install Rancher | Return the registration token URL of Rancher server
  uri:
    method: POST
    status_code: 201
    url: "http://{{ rancher_server }}:{{ rancher_port }}/v2-beta/projects/{{ rancher_project_id }}/registrationtokens"
    return_content: yes
  register: rancher_token_url
  until: rancher_token_url.status == 201
  retries: 10
  delay: 60

- name: Rancher Host | Install Rancher | Return the registration URL of Rancher server
  uri:
    method: GET
    url: "{{ rancher_token_url.json['links']['self'] }}"
    return_content: yes
  register: rancher_token

- name: Rancher Host | Install Rancher | Check if the rancher-agent is running
  command: docker ps -a
  register: containers

- debug: var=rancher_token.json['registrationUrl']

- name: Rancher Host | Install Rancher | Register the Host machine with the Rancher server
  docker_container:
      name: rancher_host
      image: rancher/agent:v{{ rancher_agent_version }}
      privileged: yes
      detach: True
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/rancher:/var/lib/rancher
      command: "{{ rancher_token.json['registrationUrl'] }}"
      state: started
  when: "{{ 'rancher-agent' not in containers.stdout }}"

- name: Wait for the Rancher agent to start
  wait_for: timeout=60
