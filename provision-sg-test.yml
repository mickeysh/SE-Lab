---
- name: AWS | Provision all required infrastructure
  hosts: localhost
  connection: local
  vars_files:
    - vars/aws-general.yml
    - vars/aws-access.yml
    - vars/aws-ec2-hosts.yml
    - vars/aws-sg.yml
  gather_facts: no
  roles:
    # Provision security groups
    - {
        role: aws-sg,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
    #   ec2_group_state: "absent",
        ec2_sg: "{{ security_groups }}"
      }
    - {
        role: aws-ec2,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
    #   ec2_group_state: "absent",
        ec2_list: "{{ rancher_hosts }}"
      }
    - {
        role: aws-ec2,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
    #   ec2_group_state: "absent",
        ec2_list: "{{ kubernetes_hosts }}"
      }
    - {
        role: aws-ec2,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
    #   ec2_group_state: "absent",
        ec2_list: "{{ rancher_masters }}"
      }
    - {
        role: aws-elb,
        elb_name: rancherelb,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
        elb_security_group_name: 'web',
        elb_subnet_id: "{{subnet_id}}",
      }
    - {
        role: aws-ec2,
        vpc_region: "{{ ec2_region }}",
        access_key: "{{ ec2_access_key }}",
        secret_key: "{{ ec2_secret_key }}",
    #   ec2_group_state: "absent",
        ec2_list: "{{ mysql_server }}"
      }
  tags:
    - aws

- name: Refresh EC2 dynamic inventory
  hosts: localhost
  tasks:
    - name: Wait before dynmaic inventory refresh
      wait_for: timeout=60
    - name: Refresh EC2 dynamic inventory
      shell: /etc/ansible/ec2.py --refresh-cache
    - name: Wait for the dynmaic inventory refresh
      wait_for: timeout=60

- name: Install python 2.7 on tall EC2 hosts
  hosts: ec2
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - raw: apt-get install -y python2.7 python-simplejson
      become: true
      become_method: sudo

- name: Install MySQL on the server
  hosts: tag_Name_mysql_server
  roles:
    - mysql
  tags:
    - mysql

- name: Install Rancher on the server
  hosts: tag_Name_rancher_master
  roles:
    - docker
    - rancher-master
  tags:
    - rancher-master

- name: Install default Rancher hosts
  hosts: tag_Name_rancher_host
  roles:
    - docker
    - rancher-host
  tags:
    - rancher-host

- name: Create kubenetes project in rancher
  hosts: localhost
  roles:
    - {
        role: rancher-kubernetes,
        project_name: kubernetes
      }
  tags:
    - kubernetes-project

- name: Install NFS on docker hosts
  hosts: tag_Docker_True
  tasks:
    - name: Intall NFS
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: present
      become: true
      become_method: sudo
      with_items:
        - nfs-common
  tags:
    - rancher-host

- name: Install Kubenetes Rancher hosts
  hosts: tag_Name_kubernetes_data
  roles:
    - {
        role: docker,
        docker_version: "1.12.6"
      }
    - {
        role: rancher-host,
        rancher_project_name: kubernetes_aws,
        rancher_host_label: 'etcd=true'
      }
  tags:
    - kubernetes-hosts

- name: Install Kubenetes Rancher hosts
  hosts: tag_Name_kubernetes_orchestration
  roles:
    - {
        role: docker,
        docker_version: "1.12.6"
      }
    - {
        role: rancher-host,
        rancher_project_name: kubernetes_aws,
        rancher_host_label: 'orchestration=true'
      }
  tags:
    - kubernetes-hosts

- name: Install Kubenetes Rancher hosts
  hosts: tag_Name_kubernetes_compute
  roles:
    - {
        role: docker,
        docker_version: "1.12.6"
      }
    - {
        role: rancher-host,
        rancher_project_name: kubernetes_aws,
        rancher_host_label: 'compute=true'
      }
  tags:
    - kubernetes-hosts
